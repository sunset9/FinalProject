<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ticket.dao.face.PfmDetailDao">

	<resultMap type="ticket.dto.Performance" id="Performance">
		<result column="pfm_idx" property="pfmIdx"/>
	</resultMap>
	
	<resultMap type="ticket.dto.Artist" id="Artist">
		<result column="artist_idx" property="artistIdx"/>
		<result column="theme_idx" property="themeIdx"/>
		<result column="img_uri" property="imgUri"/>	
	</resultMap>
	
	<resultMap type="ticket.dto.Expectation" id="Expectation">
		<result column="exp_idx" property="expIdx"/>
		<result column="pfm_idx" property="pfmIdx"/>
		<result column="user_idx" property="userIdx"/>
		<result column="exp_content" property="expContent"/>
		<result column="create_date" property="createDate"/>
		<result column="profile" property="profile"/>
		<result column="nick" property="nick"/>	
	</resultMap>
	
	<resultMap type="ticket.dto.ExpectRecomm" id="ExpectRecomm">
		<result column="exp_idx" property="expIdx"/>
		<result column="e_recomm_idx" property="eRecommIdx"/>
		<result column="user_idx" property="userIdx"/>
		<result column="contents" property="contents"/>
		<result column="create_date" property="createDate"/>
		<result column="nick" property="nick"/>	
	</resultMap>
	
	<resultMap type="ticket.dto.PfmDetail" id="PfmDetail">
		<result column="pfm_detail_idx" property="pfmDetailIdx"/>
		<result column="pfm_idx" property="pfmIdx"/>
		<result column="create_date" property="createDate"/>
		<result column="contents" property="contents"/>
	</resultMap>
		
	<select id="selectChoiceDetail" parameterType="ticket.dto.Performance" resultType="ticket.dto.Poster">
		SELECT
			poster_idx as posterIdx
			, pfm_idx as pfmIdx
			, origin_name as originName
			, stored_name as storedName
			, create_date as createDate
		FROM poster_info
		WHERE pfm_idx IN (
		    SELECT pfm_idx as pfmIdx
		    FROM performance
		    WHERE pfm_idx=#{pfmIdx}
		)
	</select>
	
	<select id="selectPfmInfo" parameterType="ticket.dto.Performance" resultType="ticket.dto.Performance">
		SELECT
			pfm_idx as pfmIdx
			, hall_idx as hallIdx
			, name
			, genre_idx as genreIdx
			, pfm_start as pfmStart
			, pfm_end as pfmEnd
			, age_grade_idx as ageGradeIdx
			, running_time as runningTime
			, ticket_start as ticketStart
			, create_date as createDate
		FROM performance
		WHERE pfm_idx=#{pfmIdx}
	</select>
	
	<select id="selectPfmDetailInfo" parameterType="ticket.dto.Performance" resultMap="PfmDetail">
		SELECT * FROM pfm_detail
		WHERE pfm_idx=#{pfmIdx}
	</select>
	
	<select id="selectCastInfo" parameterType="ticket.dto.Performance" resultMap="Artist">
		SELECT
			a.artist_idx
		    , name
		    , img_uri
		FROM (
		    SELECT artist_idx
		    FROM cast
		    WHERE pfm_idx=#{pfmIdx}
		) c
		LEFT JOIN artist a
		    ON c.artist_idx = a.artist_idx
	</select>
	
	<!-- 기대평 -->
	<select id="selectExpectationList" parameterType="ticket.dto.Performance" resultMap="Expectation">
		SELECT exp.* FROM (
		    SELECT
		        e.exp_idx
		        , e.pfm_idx
		        , e.user_idx
		        , e.exp_content
		        , e.create_date
		        , u.profile
		        , u.nick
		    FROM expectation e
		    JOIN userinfo u
		    ON u.user_idx = e.user_idx
		    WHERE pfm_idx=#{pfmIdx}
		    ORDER BY e.create_date DESC
		) exp
	</select>
	
	<select id="selectExpecUserList" parameterType="ticket.dto.Performance" resultType="ticket.dto.User">
		SELECT
		    u.profile
		    , u.name
		    , u.email
       		, u.nick
		FROM(
		    SELECT
		        exp_idx as expIdx
		        , pfm_idx as pfmIdx
		        , user_idx as userIdx
		        , exp_content as expContent
		        , create_date as createDate
		    FROM expectation
		    WHERE pfm_idx=#{pfmIdx}
		    ORDER BY create_date DESC
		) e
		LEFT JOIN userinfo u
		    ON u.user_idx = e.userIdx
	</select>
	
	<insert id="insertExpectation" parameterType="String">
		INSERT INTO expectation(exp_idx, pfm_idx, user_idx, exp_content)
		VALUES (expectation_seq.nextval, #{pfmIdx}, #{userIdx}, #{expContent})
	</insert>
	
	<delete id="deleteExpectation" parameterType="String">
		DELETE FROM expectation
		WHERE exp_idx = #{expIdx}
	</delete>
	
	<select id="selectExpRecommList" resultMap="ExpectRecomm">
		SELECT err.* FROM (
		    SELECT
		        er.e_recomm_idx
		        , er.exp_idx
		        , er.contents
		        , er.create_date
                , u.nick
		    FROM expect_recomm er
		    JOIN expectation e
		    ON e.exp_idx = er.exp_idx
            JOIN userinfo u
            ON u.user_idx = e.user_idx
		    ORDER BY er.create_date DESC
		)err
	</select>
	
	<insert id="insertExpectRecomm" parameterType="String">
		INSERT INTO expect_recomm (e_recomm_idx, exp_idx, user_idx, contents)
		VALUES(expect_recomm_seq.nextval, #{expIdx}, #{userIdx}, #{contents})
	</insert>
	
	<delete id="deleteExpRecomm" parameterType="String">
		DELETE FROM expect_recomm
		WHERE exp_idx = #{expIdx}
	</delete>
	
	<!-- 관람 후기 -->
	<select id="selectReviewList" parameterType="ticket.dto.Performance" resultType="ticket.dto.Review">
		SELECT
		    r.reviewIdx
		    , r.pfmIdx
		    , r.userIdx
		    , r.reviewContent
		    , r.createDate
		FROM(
		    SELECT
		        review_idx as reviewIdx
                , pfm_idx as pfmIdx
                , user_idx as userIdx
                , review_content as reviewContent
<!--                 , review_star as reviewStar -->
                , create_date as createDate
		    FROM review
		    WHERE pfm_idx=#{pfmIdx}
		    ORDER BY create_date DESC
		) r
		LEFT JOIN userinfo u
		    ON u.user_idx = r.userIdx
	</select>
	
	<select id="selectReviewUserList" parameterType="ticket.dto.Performance" resultType="ticket.dto.User">
		SELECT
		    u.profile
		    , u.name
		    , u.email
        	, u.nick
		FROM(
		    SELECT
		        review_idx as reviewIdx
		        , pfm_idx as pfmIdx
		        , user_idx as userIdx
		        , review_content as reviewContent
<!--                 , review_star as reviewStar -->
		        , create_date as createDate
		    FROM review
		    WHERE pfm_idx=#{pfmIdx}
		    ORDER BY create_date DESC
		) r
		LEFT JOIN userinfo u
		    ON u.user_idx = r.userIdx
	</select>
	
	<insert id="insertReview">
		INSERT INTO review(review_idx, pfm_idx, user_idx, review_content)
		VALUES (review_seq.nextval, #{pfmIdx}, #{userIdx}, #{reviewContent})
	</insert>
	
	<delete id="deleteReview">
		DELETE FROM review
		WHERE review_idx = #{reviewIdx}
	</delete>
	
	<select id="selectHallInfoList" parameterType="ticket.dto.Performance"  resultType="ticket.dto.Hall">
		SELECT
		    h.hall_idx as hallIdx
		    , hall_name as hallName
		    , hall_loc as hallLoc
		    , hall_phone as hallPhone
		FROM performance p, hall h
		WHERE pfm_idx=${pfmIdx}
		    AND p.hall_idx = h.hall_idx
	</select>
	
	<select id="selectHallImg" parameterType="ticket.dto.Performance"  resultType="ticket.dto.HallFile">
		SELECT
		    hf.stored_name storedName
		FROM hall h, hall_file hf, (
		    SELECT * FROM performance
		    WHERE pfm_idx=#{pfmIdx}
		) p
		WHERE h.hall_idx = hf.hall_idx
		AND hf.hall_idx = p.hall_idx
		AND p.hall_idx = h.hall_idx
	</select>
	
	<insert id="InsertMychoice" parameterType="String">
		INSERT INTO my_choice(choice_idx, user_idx, pfm_idx)
		VALUES(my_choice_seq.nextval, ${userIdx}, ${pfmIdx})
	</insert>
	
	<select id="selectQNAList" parameterType="ticket.dto.Performance" resultType="ticket.dto.QNA">
		SELECT qna.* FROM (
		    SELECT 
		        q.qna_idx as qnaIdx
		        , q.pfm_idx as pfmIdx
		        , q.user_idx as userIdx
		        , q.qna_content as qnaContent
		        , q.create_date as createDate
		    FROM qna q
		    JOIN userinfo u
		    ON u.user_idx = q.user_idx
		    WHERE pfm_idx = #{pfmIdx}
		    ORDER BY createDate DESC
		) qna
	</select>
	
	<select id="selectQNAUserList" parameterType="ticket.dto.Performance" resultType="ticket.dto.User">
		SELECT us.* FROM (
		    SELECT
		        u.user_idx as userIdx
		        , u.profile
		        , u.name
    		    , u.nick
		        , u.create_date as createDate
		    FROM userinfo u
		    JOIN qna q
		    ON q.user_idx = u.user_idx
		    WHERE pfm_idx = 3
		    ORDER BY u.create_date DESC
		) us
	</select>
	
	<select id="selectQNARecommList" resultType="ticket.dto.QNARecomm">
		SELECT
		    qr.q_recomm_idx as qRecommIdx
		    , qr.qna_idx as qnaIdx
		    , qr.user_idx as userIdx
		    , qr.contents
		    , qr.create_date as createDate
		FROM qna_recomm qr
		JOIN qna q
		ON qr.qna_idx = q.qna_idx
		WHERE q.pfm_idx = #{pfmIdx}
		ORDER BY qr.create_date DESC
	</select>
</mapper>