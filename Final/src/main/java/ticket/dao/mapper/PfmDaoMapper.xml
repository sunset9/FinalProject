<?xml version="1.0" encoding="UTF-8"?>

<!-- 마이바티스 3 매퍼 DOCTYPE -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ticket.dao.face.PfmDao">

	<resultMap type="ticket.dto.Genre" id="Genre">
		<result column="genre_idx" property="genreIdx"/>
		<result column="genre" property="genre"/>
	</resultMap>
	
	<resultMap type="ticket.dto.Theme" id="Theme">
		<result column="theme_idx" property="themeIdx"/>
		<result column="theme_name" property="themeName"/>
		<result column="genre_idx" property="genreIdx"/>
	</resultMap>
	
	<resultMap type="ticket.dto.Performance" id="Performance">
		<result column="pfm_idx" property="pfmIdx"/>
		<result column="name" property="name"/>
		<result column="genre_idx" property="genreIdx"/>
		<result column="pfm_start" property="pfmStart"/>
		<result column="pfm_end" property="pfmEnd"/>
		<result column="ticket_start" property="ticketStart"/>
		<result column="ticket_end" property="ticketEnd"/>
		<result column="hall_idx" property="hallIdx"/>
		<result column="age_grade_idx" property="ageGradeIdx"/>
		<result column="running_time" property="runningTime"/>
		<result column="create_date" property="createDate"/>
		<result column="poster_name" property="posterName"/>
		<result column="stored_name" property="storedName"/>
		<result column="hall_name" property="hallName"/>
	</resultMap>
	
	<resultMap type="ticket.dto.MainBanner" id="MainBannerMap">
		<result column="pfm_idx" property="pfmIdx"/>
		<result column="mainban_idx" property="mainbanIdx"/>
		<result column="pfm_start" property="pfmStart"/>
		<result column="pfm_end" property="pfmEnd"/>
		<result column="stored_name" property="storedName"/>
		<result column="banner_img_str" property="bannerImgStr"/>
		<result column="thumb_img_str" property="thumbImgStr"/>
		<result column="banner_img_ori" property="bannerImgOri"/>
		<result column="thumb_img_ori" property="thumbImgOri"/>
		<result column="hall_name" property="hallName"/>
	</resultMap>
	
	<resultMap type="ticket.dto.TabBanner" id="TabBannerMap">
		<result column="tab_idx" property="tabIdx" />
		<result column="pfm_idx" property="pfmIdx" />
		<result column="tab_genre" property="tabGenre" />
		<result column="banner_path" property="bannerPath" />
		<result column="create_date" property="createDate" />
		<result column="genre_idx" property="genreIdx" />
		<result column="pfm_start" property="pfmStart" />
		<result column="pfm_end" property="pfmEnd" />
		<result column="hall_name" property="hallName" />
	</resultMap>

	<select id="selectAllGenre" resultMap="Genre">
		SELECT genre_idx, genre
		FROM genre
		ORDER BY genre_idx
	</select>

	<select id="selectAllTheme" parameterType="ticket.dto.Genre" resultMap="Theme">
		SELECT theme_idx, theme_name, genre_idx
		FROM theme
		WHERE genre_idx = #{genreIdx }
		ORDER BY theme_idx
	</select>
	
	<select id="selectAllAgeGrade" resultType="ticket.dto.AgeGrade">
		SELECT age_grade_idx as ageGradeIdx, age_limit as ageLimit  
		FROM age_grade
		ORDER BY age_grade_idx
	</select>
	
	<select id="selectArtistByName" resultType="ticket.dto.Artist">
		SELECT 
			aa.artist_idx as artistIdx,
			aa.theme_idx as themeIdx, 
			aa.name as name, 
			aa.img_uri as imgUri 
		FROM (
    		SELECT ROWNUM as rnum, a.* FROM (
       			SELECT  * FROM artist
                WHERE name LIKE '%${artist.name }%'
    		) a
		)aa
		WHERE rnum BETWEEN #{paging.startNo } AND #{paging.endNo }
		ORDER BY rnum
	</select>
	
	<select id="selectAllHall" parameterType="ticket.dto.Hall" resultType="ticket.dto.Hall">
		SELECT 
			hall_idx hallIdx,
			hall_name hallName,
			hall_loc hallLoc,
			hall_phone hallPhone,
			create_date createDate
		FROM hall
		ORDER BY hall_name
	</select>
	
  	<insert id="insertPfm" parameterType="ticket.dto.Performance">
		<selectKey keyProperty="pfmIdx" resultType="int" order="BEFORE">
			SELECT performance_seq.nextval FROM DUAL
		</selectKey>
		
		INSERT INTO performance(pfm_idx ,name ,genre_idx ,pfm_start ,pfm_end 
			,ticket_start ,ticket_end ,hall_idx ,age_grade_idx ,running_time )
		VALUES (#{pfmIdx }, #{name }, #{genreIdx }, #{pfmStart }, #{pfmEnd }
			, #{ticketStart }, #{ticketEnd }, #{hallIdx }, #{ageGradeIdx }, #{runningTime })
	</insert>
  
	<select id="selectTodayBook" resultType="int">
		SELECT COUNT(*) FROM book
		WHERE to_char(create_date, 'yy/mm/dd') = to_char(SYSDATE, 'yy/mm/dd')
			AND (book_cate_idx = 1 OR book_cate_idx = 2)
	</select>
	
	<select id="selectTodayCancel" resultType="int">
		SELECT COUNT(*) FROM book
		WHERE to_char(create_date, 'yy/mm/dd') = to_char(SYSDATE, 'yy/mm/dd')
			AND (book_cate_idx = 3 OR book_cate_idx = 4)
	</select>
	
	<select id="selectTodayAllPfm" resultType="int">
		SELECT COUNT(*) FROM performance
		WHERE to_char(create_date, 'yy/mm/dd') = to_char(SYSDATE, 'yy/mm/dd')
	</select>
	
	<select id="selectTodayCon" resultType="int">
		SELECT COUNT(*) FROM performance
		WHERE genre_idx = 1
		AND to_char(create_date, 'yy/mm/dd') = to_char(SYSDATE, 'yy/mm/dd')
	</select>
	
	<select id="selectTodayMu" resultType="int">
		SELECT COUNT(*) FROM performance
		WHERE genre_idx = 2
		AND to_char(create_date, 'yy/mm/dd') = to_char(SYSDATE, 'yy/mm/dd')
	</select>
	
	<select id="selectTodayFam" resultType="int">
		SELECT COUNT(*) FROM performance
		WHERE genre_idx = 3
		AND to_char(create_date, 'yy/mm/dd') = to_char(SYSDATE, 'yy/mm/dd')
	</select>
	
	<select id="selectUnanswered" resultType="int">
		SELECT COUNT(*) FROM inquiry
		WHERE reply_status = 1
	</select>
	
	<insert id="insertPfmTheme" parameterType="ticket.dto.PfmTheme">
		INSERT INTO pfm_theme(pfm_theme_idx ,pfm_idx ,theme_idx)
		VALUES (pfm_theme_seq.nextval, #{pfmIdx }, #{themeIdx } )
	</insert>
	
	<insert id="insertPoster" parameterType="ticket.dto.Poster">
		INSERT INTO poster_info (poster_idx , pfm_idx , origin_name , stored_name )
		VALUES (poster_info_seq.nextval, #{pfmIdx }, #{originName }, #{storedName })
	</insert>
	
	<insert id="insertCast" parameterType="ticket.dto.Cast">
		INSERT INTO cast (cast_idx ,pfm_idx ,artist_idx)
		VALUES (cast_seq.nextval, #{pfmIdx }, #{artistIdx })
	</insert>
	
	<insert id="insertPfmDbt" parameterType="ticket.dto.PfmDateByTime">
		INSERT INTO pfm_datebytime(pfm_dbt_idx ,pfm_idx ,pfm_date ,pfm_time)
		VALUES (pfm_datebytime_seq.nextval, #{pfmIdx }, #{pfmDate }, #{pfmTime })
	</insert>
	
	<insert id="insertPfmDetail" parameterType="ticket.dto.PfmDetail">
	 	INSERT INTO pfm_detail(pfm_detail_idx ,pfm_idx ,contents)
	 	VALUES (pfm_detail_seq.nextval, #{pfmIdx }, #{contents })
	</insert>
	
	<insert id="insertPfmBookinfo" parameterType="ticket.dto.PfmBookinfo">
	 	INSERT INTO pfm_bookinfo(pfm_bookinfo_idx ,pfm_idx ,contents)
	 	VALUES (pfm_bookinfo_seq.nextval, #{pfmIdx }, #{contents })
	</insert>
	
	<select id="selectCntArtist" parameterType="ticket.dto.Artist"
		resultType="int">
		SELECT 
			count(*)
		FROM artist
		WHERE name LIKE '%${name }%'
	</select>
	
	<select id="selectAllCntPfmByGenre" parameterType="int" resultType="int">
		SELECT count(*)
		FROM performance
		WHERE genre_idx = #{genreIdx }
	</select>
	
	<select id="selectPfmByGenre" resultMap="Performance">
		SELECT 
			po.stored_name poster_name , h.hall_name ,pp.*
		FROM (
    		SELECT ROWNUM as rnum, p.* FROM (
       			SELECT  * FROM performance
                WHERE genre_idx = #{genreIdx }
                ORDER BY pfm_idx desc
    		) p
		)pp
        LEFT JOIN poster_info po
        ON pp.pfm_idx = po.pfm_idx
        LEFT JOIN hall h
		ON pp.hall_idx = h.hall_idx
		WHERE rnum BETWEEN #{paging.startNo } AND #{paging.endNo }
		ORDER BY rnum
	</select>
	
	<select id="selectCntPfmSearch" parameterType="String" resultType="int">
		SELECT count(*)
		FROM performance
		WHERE name LIKE '%${value }%'
	</select>
	
	<select id="selectPfmSearch" resultMap="Performance">
		SELECT 
			po.stored_name poster_name ,pp.*
		FROM (
			SELECT ROWNUM as rnum, p.* FROM (
				SELECT *
				FROM performance
				WHERE name LIKE '%${keyword }%'
				ORDER BY pfm_idx desc
			) p
		)pp
		LEFT JOIN poster_info po
        ON pp.pfm_idx = po.pfm_idx
		WHERE rnum BETWEEN #{paging.startNo } AND #{paging.endNo }
		ORDER BY rnum
	</select>
	
	<sql id="ByPfmIdx">
		WHERE pfm_idx = #{pfmIdx }
	</sql>
	
	<select id="selectPfmByIdx" parameterType="ticket.dto.Performance" resultMap="Performance">
		SELECT *
		FROM performance
		<include refid="ByPfmIdx" />
	</select>
	
	<select id="selectThemeByPfmIdx" parameterType="ticket.dto.Performance" resultMap="Theme">
		SELECT t.* 
		FROM theme t
        RIGHT JOIN pfm_theme pt
        ON t.theme_idx = pt.theme_idx 
   		WHERE pt.pfm_idx = #{pfmIdx }
	</select>
	
	<select id="selectArtistByPfmIdx" parameterType="ticket.dto.Performance" resultType="ticket.dto.Artist">
		SELECT 
			a.artist_idx artistIdx
			, a.theme_idx themeIdx
			, a.name name 
			, a.img_uri imgUri
		FROM artist a
		RIGHT JOIN cast c
		ON a.artist_idx = c.artist_idx
		WHERE c.pfm_idx = #{pfmIdx }
	</select>
	
	<select id="selectPfmdbtByPfmIdx" parameterType="ticket.dto.Performance" resultType="ticket.dto.PfmDateByTime">
		SELECT 
			pfm_dbt_idx pfmDbtIdx
			,pfm_idx pfmIdx
			,pfm_date pfmDate
			,pfm_time pfmTime
			,create_date createDate 
		FROM pfm_datebytime
		<include refid="ByPfmIdx" />
	</select>
	
	<select id="selectPfmDetailByPfmIdx" parameterType="ticket.dto.Performance" resultType="ticket.dto.PfmDetail">
		SELECT 
			pfm_detail_idx pfmDetailIdx
			,pfm_idx pfmIdx
			,contents contents
			,create_date createDate 
		FROM pfm_detail
		<include refid="ByPfmIdx" />
	</select>
	
	<select id="selectPfmBookinfoByPfmIdx" parameterType="ticket.dto.Performance" resultType="ticket.dto.PfmBookinfo">
		SELECT 
			pfm_bookinfo_idx pfmBookinfoIdx
			,pfm_idx pfmIdx 
			,contents contents
			,create_date createDate  
		FROM pfm_bookinfo
		<include refid="ByPfmIdx" />
	</select>
	
	<select id="selectPosterByPfmIdx" parameterType="ticket.dto.Performance" resultType="ticket.dto.Poster">
		SELECT 
			poster_idx posterIdx
			,pfm_idx pfmIdx
			,origin_name originName
			,stored_name storedName
			,create_date createDate  
		FROM poster_info
		<include refid="ByPfmIdx" />
	</select>
	
	<select id="selectPfmByPreferTheme" resultMap="Performance" parameterType="hashmap">
		SELECT 
		    P.pfm_idx
		    , (SELECT stored_name FROM poster_info PI WHERE PI.pfm_idx = P.pfm_idx) poster_name 
		    , theme_idx
		FROM performance P
		INNER JOIN pfm_theme PT
		ON P.pfm_idx = PT.pfm_idx
		
		  <if test="ptList != null">
  		WHERE theme_idx IN
  			<foreach collection="ptList" item="theme" open="(" close=")" separator=",">
  				#{theme.themeIdx}
  			</foreach>
  		</if>
	</select>
	
	<update id="updatePfm" parameterType="ticket.dto.Performance">
		UPDATE performance
		SET 
			name=#{name }
			, genre_idx=#{genreIdx }
			, pfm_start=#{pfmStart }
			, pfm_end=#{pfmEnd }
			, ticket_start=#{ticketStart }
			, ticket_end=#{ticketEnd }
			, hall_idx=#{hallIdx }
			, age_grade_idx=#{ageGradeIdx }
			, running_time=#{runningTime }
			, create_date=SYSDATE
		<include refid="ByPfmIdx" />
	</update>
	
	<update id="updatePoster" parameterType="ticket.dto.Poster">
		MERGE INTO poster_info
		USING DUAL ON (pfm_idx = #{pfmIdx })
		WHEN MATCHED THEN
			UPDATE SET 
				origin_name=#{originName }
				, stored_name=#{storedName }
		WHEN NOT MATCHED THEN
			INSERT (poster_idx , pfm_idx , origin_name , stored_name )
			VALUES (poster_info_seq.nextval, #{pfmIdx }, #{originName }, #{storedName })
	</update>
	
	<delete id="deletePfmTheme" parameterType="int">
		DELETE pfm_theme
		<include refid="ByPfmIdx" />
	</delete>

	<delete id="deleteCast" parameterType="int">
		DELETE cast
		<include refid="ByPfmIdx" />
	</delete>

	<delete id="deletePfmDbt" parameterType="int">
		DELETE pfm_datebytime
		<include refid="ByPfmIdx" />
	</delete>
	
	<update id="updatePfmDetail" parameterType="ticket.dto.PfmDetail">
		MERGE INTO pfm_detail
		USING DUAL ON (pfm_idx = #{pfmIdx })
		WHEN MATCHED THEN
			UPDATE SET contents = #{contents }
		WHEN NOT MATCHED THEN
			INSERT (pfm_detail_idx ,pfm_idx ,contents)
	 		VALUES (pfm_detail_seq.nextval, #{pfmIdx }, #{contents })	
	</update>
	
	<update id="updatePfmBookinfo" parameterType="ticket.dto.PfmBookinfo">
		MERGE INTO pfm_bookinfo
		USING DUAL ON (pfm_idx = #{pfmIdx })
		WHEN MATCHED THEN
			UPDATE SET contents = #{contents }
		WHEN NOT MATCHED THEN
			INSERT (pfm_bookinfo_idx ,pfm_idx ,contents)
		 	VALUES (pfm_bookinfo_seq.nextval, #{pfmIdx }, #{contents })
	</update>
	
	<insert id="insertSeatSection" parameterType="ticket.dto.SeatSection">
		<selectKey keyProperty="oriSecIdx" resultType="int" order="BEFORE">
			SELECT ori_sec_idx 
			FROM originsection
			WHERE sec_name = #{oriSecName }
		</selectKey>
		
		INSERT INTO seatsection(sec_idx, hall_idx, pfm_idx, ori_sec_idx, app_sec, sec_pay)
		VALUES(seatsection_seq.nextval, #{hallIdx }, #{pfmIdx }, #{oriSecIdx }, #{appSec }, #{secPay })
	</insert>
	
	<select id="selectSeatSectionByPfmIdx" parameterType="ticket.dto.Performance"
		resultType="ticket.dto.SeatSection">
		SELECT 
			ss.sec_idx secIdx
			, ss.hall_idx hallIdx
			, ss.pfm_idx pfmIdx
			, ss.ori_sec_idx oriSecIdx
			, ss.app_sec appSec
			, ss.sec_pay secPay
			, ss.create_date createDate
            , os.sec_name oriSecName
		FROM seatsection ss
        LEFT JOIN originsection os
        ON ss.ori_sec_idx = os.ori_sec_idx
		<include refid="ByPfmIdx" />	
	</select>
	
	<delete id="deleteSeatSec" parameterType="int">
		DELETE seatsection 
		<include refid="ByPfmIdx" />
	</delete>
	
	<delete id="deletePoster" parameterType="int">
		DELETE poster_info 
		<include refid="ByPfmIdx" />
	</delete>
	
	<delete id="deletePfmBookinfo" parameterType="int">
		DELETE pfm_bookinfo 
		<include refid="ByPfmIdx" />
	</delete>
	
	<delete id="deletePfmDetail" parameterType="int">
		DELETE pfm_detail 
		<include refid="ByPfmIdx" />
	</delete>
	
	<delete id="deletePfm" parameterType="int">
		DELETE performance 
		<include refid="ByPfmIdx" />
	</delete>
	
	<select id="selectMainBanner" resultMap="MainBannerMap">
		SELECT MB.MAINBAN_IDX, P.NAME, P.PFM_START, P.PFM_END, PI.STORED_NAME, MB.banner_img_str, MB.thumb_img_str, H.hall_name
		FROM MAIN_BANNER MB JOIN PERFORMANCE P
		ON MB.PFM_IDX = P.PFM_IDX JOIN POSTER_INFO PI
		ON MB.PFM_IDX = PI.PFM_IDX JOIN HALL H
		ON P.HALL_IDX = H.HALL_IDX
	</select>
	
	<delete id="deleteMainBanner" parameterType="int">
		DELETE main_banner
		WHERE mainban_idx = #{value}
	</delete>
	
	<select id="selectNewTabBanner" resultMap="TabBannerMap">
		SELECT
		    tb.tab_idx,
		    tb.pfm_idx,
		    tb.tab_genre,
		    tb.banner_path,
		    tb.create_date,
		    p.name,
		    p.pfm_start,
		    p.pfm_end,
		    h.hall_name
		FROM
		    tab_banner tb
		    JOIN performance p ON tb.pfm_idx = p.pfm_idx
		    JOIN hall h ON p.hall_idx = h.hall_idx
		WHERE
		    tb.tab_genre = 3
	</select>
	
	<select id="selectConTabBanner" resultMap="TabBannerMap">
		SELECT
		    tb.tab_idx,
		    tb.pfm_idx,
		    tb.tab_genre,
		    tb.banner_path,
		    tb.create_date,
		    p.name,
		    p.pfm_start,
		    p.pfm_end,
		    h.hall_name
		FROM
		    tab_banner tb
		    JOIN performance p ON tb.pfm_idx = p.pfm_idx
		    JOIN hall h ON p.hall_idx = h.hall_idx
		WHERE
		    tb.tab_genre = 1
	</select>
	
	<select id="selectMuTabBanner" resultMap="TabBannerMap">
		SELECT
		    tb.tab_idx,
		    tb.pfm_idx,
		    tb.tab_genre,
		    tb.banner_path,
		    tb.create_date,
		    p.name,
		    p.pfm_start,
		    p.pfm_end,
		    h.hall_name
		FROM
		    tab_banner tb
		    JOIN performance p ON tb.pfm_idx = p.pfm_idx
		    JOIN hall h ON p.hall_idx = h.hall_idx
		WHERE
		    tb.tab_genre = 2
	</select>
	
	<select id="selectPfmListByPeriod" resultMap="Performance">
		SELECT P.pfm_idx, P.NAME, genre_idx, pfm_start, pfm_end, ticket_start, ticket_end, P.hall_idx
				, age_grade_idx, running_time, P.create_date, Ps.stored_name poster_name, H.hall_name, COUNT(S.seat_idx) cnt 
		FROM performance P
		LEFT JOIN seat S
		ON P.hall_idx = S.hall_idx
		LEFT JOIN hall H
		ON P.hall_idx = H.hall_idx
		LEFT JOIN poster_info Ps
		ON P.pfm_idx = Ps.pfm_idx
		WHERE ( p.genre_idx = #{genreIdx }
				AND (
					(ticket_start between #{start } and #{end })  
					OR (ticket_end between #{start } and #{end })
					OR (#{start } between ticket_start and ticket_end)  
					OR (#{end } between ticket_start and ticket_end)
				)
			)
		GROUP BY P.pfm_idx, P.NAME, genre_idx, pfm_start, pfm_end, ticket_start, ticket_end, P.hall_idx
				, age_grade_idx, running_time, P.create_date, Ps.stored_name, H.hall_name
		ORDER BY cnt
	</select>

	<select id="selectCntAllSeatByHallIdx" parameterType = "ticket.dto.Performance" resultType="int">
		SELECT COUNT(*) FROM seat
		WHERE hall_idx = #{hallIdx }
	</select>
	
	<select id="selectCntBookSeatBypfmIdx" resultType="int">
		SELECT COUNT(*) FROM book
		WHERE pfm_idx = #{pfm.pfmIdx }
			AND book_cate_idx = 2
			AND trunc(create_date,'dd') BETWEEN #{startDate } AND #{endDate }
	</select>
	
	<select id="selectTotalPfm" resultType="int" parameterType="String">
		SELECT COUNT(*) FROM performance
		WHERE name = #{value}
	</select>
	
	<select id="selectNeweastPfm" parameterType="ticket.utils.Paging" resultMap="Performance">
		SELECT * FROM (
			SELECT ROWNUM no, PP.* FROM 
			(SELECT p.*, pi.stored_name, h.hall_name
			FROM performance p JOIN poster_info pi
			ON p.pfm_idx = pi.pfm_idx JOIN hall h
			ON p.hall_idx = h.hall_idx
			<if test= "search != null">
				WHERE p.name LIKE '%' || #{search} || '%'
			</if>
			ORDER BY p.create_date DESC) PP
			)
		WHERE no BETWEEN #{startNo} AND #{endNo}
	</select>
	
	<insert id="insertMainBanner" parameterType="ticket.dto.MainBanner">
		INSERT INTO main_banner
		VALUES(main_banner_seq.nextval, #{pfmIdx}, #{bannerImgOri}, #{bannerImgStr}, #{thumbImgOri}, #{thumbImgStr},  sysdate)
	</insert>
	
	<select id="selectPfmIdxDup" parameterType="int" resultType="int">
		SELECT COUNT(*) FROM main_banner 
		WHERE pfm_idx = #{value}
	</select>
	
	<select id="selectAllPfmList" parameterType="ticket.utils.Paging" resultMap="Performance">
		SELECT * FROM (
			SELECT ROWNUM no, PP.* FROM 
			(SELECT p.*, pi.stored_name, h.hall_name
			FROM performance p JOIN poster_info pi
			ON p.pfm_idx = pi.pfm_idx JOIN hall h
			ON p.hall_idx = h.hall_idx
			WHERE to_char( p.create_date, 'yyyymmdd' ) = to_char( sysdate, 'yyyymmdd')
			<if test= "search != null">
				AND p.name LIKE '%' || #{search} || '%'
			</if>
			ORDER BY p.create_date DESC) PP
			)
		WHERE no BETWEEN #{startNo} AND #{endNo}
	</select>
	
	<select id="selectAllConPfm" parameterType="ticket.utils.Paging" resultMap="Performance">
		SELECT * FROM (
			SELECT ROWNUM no, PP.* FROM 
			(SELECT p.*, pi.stored_name, h.hall_name
			FROM performance p JOIN poster_info pi
			ON p.pfm_idx = pi.pfm_idx JOIN hall h
			ON p.hall_idx = h.hall_idx
			WHERE p.genre_idx = 1
			<if test= "search != null">
				AND p.name LIKE '%' || #{search} || '%'
			</if>
			ORDER BY p.create_date DESC) PP
			)
		WHERE no BETWEEN #{startNo} AND #{endNo}
	</select>
	
	<select id="selectAllMuPfm" parameterType="ticket.utils.Paging" resultMap="Performance">
		SELECT * FROM (
			SELECT ROWNUM no, PP.* FROM 
			(SELECT p.*, pi.stored_name, h.hall_name
			FROM performance p JOIN poster_info pi
			ON p.pfm_idx = pi.pfm_idx JOIN hall h
			ON p.hall_idx = h.hall_idx
			WHERE p.genre_idx = 2
			<if test= "search != null">
				AND p.name LIKE '%' || #{search} || '%'
			</if>
			ORDER BY p.create_date DESC) PP
			)
		WHERE no BETWEEN #{startNo} AND #{endNo}
	</select>
	
	<select id="selectPfmByPfmIdx" parameterType="int" resultMap="Performance">
		SELECT p.*, h.hall_name
		FROM performance p JOIN hall h
		ON p.hall_idx = h.hall_idx
		WHERE pfm_idx = 1
	</select>
</mapper>