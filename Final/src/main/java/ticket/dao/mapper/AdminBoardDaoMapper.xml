<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

  <mapper namespace="ticket.dao.face.AdminBoardDao">
  
  
  <resultMap type="ticket.dto.Notice" id="notice">
  	<result column="notice_idx" property="noticeIdx" />
  	<result column="user_idx" property="userIdx" />
  	<result column="n_type_idx" property="NTypeIdx" />
  	<result column="notice_title" property="noticeTitle" />
  	<result column="notice_content" property="noticeContent" />
  	<result column="create_date" property="createDate" />  
  	<result column="prev" property="prev" />
  	<result column="prev_title" property="prevTitle" />  	
  	<result column="next" property="next" />
  	<result column="next_title" property="nextTitle" />
  </resultMap>
  
	<resultMap type="ticket.dto.Inquiry" id="Inquiry">
	 	<result column="inq_idx" property="inqIdx" />
	 	<result column="user_idx" property="userIdx" />
	 	<result column="title" property="title" />
	 	<result column="contents" property="contents" />
	 	<result column="reply_status" property="replyStatus" />
	 	<result column="create_date" property="createDate" />  
	 	<result column="name" property="userName" />  
	 </resultMap>
	 
	<resultMap type="ticket.dto.InquiryAnswer" id="InquiryAnswer">
	 	<result column="answer_idx" property="answerIdx" />
	 	<result column="inq_idx" property="inqIdx" />
	 	<result column="user_idx" property="userIdx" />
	 	<result column="title" property="title" />
	 	<result column="contents" property="contents" />
	 	<result column="create_date" property="createDate" />  
	 	<result column="name" property="userName" />  
	 </resultMap>
	 
	 <resultMap type="ticket.dto.Faq" id="Faq">
	 	<result column="faq_idx" property="faqIdx"/>
	 	<result column="f_type_idx" property="FTypeIdx"/>
	 	<result column="faq_question" property="faqQuestion"/>
	 	<result column="faq_answer" property="faqAnswer"/>
	 	<result column="create_date" property="createDate"/>	 
	 </resultMap>
	 
<!-- 	공지사항 전체 글 리스트 -->
  <select id="selectNotiList" resultMap="notice" parameterType="ticket.utils.Paging">
  	select * from ( 
  		select rownum rnum, B.* from (
  			select * from notice order by notice_idx desc
  		) B
  		order by notice_idx desc
  	) R
  	where R.rnum between #{startNo} AND #{endNo}
  	order by rnum
  </select>
  
<!--   이전글 -->
  <select id="preNoti" resultMap="notice">
	select * from 
	(select notice_idx
	, lag(notice_idx,1) over(order by notice_idx) prev, 
	lag(notice_title,1) over(order by notice_idx) prev_title from notice)
	where notice_idx = #{notice_idx}
  </select>
  
<!--   다음글 -->
  <select id="postNoti" resultMap="notice">
	select * from 
	(select notice_idx
	, lead(notice_idx,1) over(order by notice_idx) next, 
	lead(notice_title,1) over(order by notice_idx) next_title from notice)
	where notice_idx = #{notice_idx}
  </select>
  
  
<!--   전체 게시글 조회 -->
  <select id="selectCntAll" resultType="int">
  	select count(*) cut from(
  		select * from notice
  		
  	) cnt
  </select>
  
<!--   공지사항 상세보기 -->
  <select id="selectNotiView" resultMap="notice">
  	select * from notice
  		where notice_idx = #{notice_idx}
  </select>

<!-- 공지사항 글 쓰기 -->
  <insert id="insertNoti" parameterType="ticket.dto.Notice">
  	insert into notice (notice_idx,  n_type_idx, notice_title , notice_content) 
  			values (notice_seq.nextval, #{NTypeIdx}, #{noticeTitle} , #{noticeContent})
  </insert>

<!-- 	글번호로 게시글 조회 (수정 get) -->
  <select id="selectNoticeBynoticeIdx" resultMap="notice">
  	select * from notice
  		where notice_idx = #{noticeIdx}
  </select>
	
  <update id="updateNoti" parameterType="ticket.dto.Notice">
	  UPDATE notice set 
	  			 n_type_idx = #{NTypeIdx},
	  			 notice_title = #{noticeTitle}, 
	  			 notice_content = #{noticeContent} 
	  where notice_idx = #{noticeIdx}
  </update>


  <delete id="deleteNoti" parameterType="ticket.dto.Notice">
    	delete notice where notice_idx = #{noticeIdx}
  </delete>


	<select id="selectCntAllInq" resultType="int">
		SELECT COUNT(*) FROM inquiry
	</select>

	<select id="selectInquiryList" parameterType="ticket.utils.Paging" resultMap="Inquiry">
		SELECT 
			ii.*
		FROM (
    		SELECT ROWNUM as rnum, iq.* FROM (
       			SELECT  i.*, u.name  FROM inquiry i
                LEFT JOIN userinfo u
                ON i.user_idx = u.user_idx
                ORDER BY i.create_date desc
    		) iq
		) ii
		WHERE rnum BETWEEN #{startNo } AND #{endNo }
		ORDER BY rnum
	</select>

	<select id="selectInquiryByInqIdx" parameterType="ticket.dto.Inquiry" resultMap="Inquiry">
		SELECT i.*, u.name FROM inquiry i
		LEFT JOIN userinfo u
        ON i.user_idx = u.user_idx
		WHERE i.inq_idx = #{inqIdx }
	</select>
	
	<insert id="insertInquiry" parameterType="ticket.dto.Inquiry">
		INSERT INTO inquiry(inq_idx ,user_idx, title , contents, reply_status)
		VALUES (inquiry_seq.nextval, #{userIdx }, #{title }, #{contents }, 0)
	</insert>
	
	<insert id="insertReplyInquiry" parameterType="ticket.dto.InquiryAnswer">
		INSERT INTO inquiry_answer( answer_idx ,inq_idx ,user_idx ,title ,contents)
		VALUES (inquiry_answer_seq.nextval, #{inqIdx }, #{userIdx }, #{title }, #{contents })
	</insert>

	<update id="updateInqReplyStatus" parameterType="ticket.dto.InquiryAnswer">
		UPDATE inquiry 
		SET reply_status = 1
		WHERE inq_idx = #{inqIdx }
	</update>

	<select id="selectInquiryAnswer" parameterType="ticket.dto.Inquiry" resultMap="InquiryAnswer">
		SELECT ia.*, u.name
		FROM inquiry_answer ia
		LEFT JOIN userinfo u
        ON ia.user_idx = u.user_idx
		WHERE ia.inq_idx = #{inqIdx }
	</select>
	
	<delete id="deleteReplyInquiry" parameterType="ticket.dto.InquiryAnswer">
		DELETE inquiry_answer
		WHERE inq_idx = #{inqIdx }
	</delete>
	
	<delete id="deleteInquiry" parameterType="ticket.dto.Inquiry">
		DELETE inquiry
		WHERE inq_idx = #{inqIdx }
	</delete>


<!-- 	FAQ 전체 글 리스트 -->
	<select id="selectFaqList" resultMap="Faq" parameterType="ticket.utils.Paging">
	 	select * from ( 
  		select rownum rnum, B.* from (
  			select * from faq order by faq_idx desc
  		) B
  		order by faq_idx desc
  	) R
  	where R.rnum between #{startNo} AND #{endNo}
  	order by rnum
	</select>


<!-- FAQ 전체 게시글 조회 -->
	<select id="selectCntAllFaq" resultType="int">
		select count(*) cut from(
	  		select * from faq  		
	  	) cnt
	</select>
	
	
	
<!-- FAQ 상세보기 (조회) -->
<select id="faqView" resultMap="Faq"> 
select * from faq 
	where faq_idx = #{faq_idx}
</select>

<!-- FAQ 쓰기 -->
<insert id="insertFaq" parameterType="ticket.dto.Faq">
insert into faq ( faq_idx,  f_type_idx, faq_question, faq_answer)
    values (faq_seq.nextval, #{FTypeIdx} ,#{faqQuestion}, #{faqAnswer})
</insert>


<!-- FAQ 수정 (FAQ조회, 수정 나중에 해당 부분 수정필요))-->
<select id="selectFaqByfaqIdx" resultMap="Faq">
	select * from faq
		where faq_idx = #{faqIdx}
</select>

<update id="updateFaq" parameterType="ticket.dto.Faq">
UPDATE faq set
        f_type_idx = #{FTypeIdx},
        faq_question = #{faqQuestion},
        faq_answer = #{faqAnswer} 
    where faq_idx = #{faqIdx}
</update>
        
<!-- FAQ 삭제 -->
<delete id="deleteFaq" parameterType="ticket.dto.Faq">
	delete from faq	where faq_idx = #{faqIdx}
</delete>






  </mapper>
  
  
  
  
  
  
  
  
  
  